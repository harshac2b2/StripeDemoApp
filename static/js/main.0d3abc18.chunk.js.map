{"version":3,"sources":["logo.svg","Products.js","App.js","reportWebVitals.js","index.js"],"names":["Component","PAGE_PRODUCTS","PAGE_CART","PAGE_CHECKOUT","PAGE_CONFIRMATION","PAGE_FAILURE","loadStripe","App","fetch_data_url","useState","products","setProduct","cart","setCart","page","setPage","id","setId","error","setError","amtCharged","setAmt","useEffect","axios","get","then","response","data","navigateTo","nextPage","removeFromCart","productToRemove","filter","product","handleToken","token","addresses","a","console","log","post","amount","Number","product_cost","currency","description","product_name","recipientEmail","document","getElementById","value","shipping","name","address","line1","line2","city","country","postal_code","status","response_id","amount_charged","className","Button","color","variant","size","onClick","length","map","src","product_image","alt","addToCart","Grid","container","spacing","alignContent","item","xs","align","FormControl","TextField","required","label","defaultValue","sm","fullWidth","InputLabelProps","shrink","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d3abc18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport class Products extends Component {    \r\n    \r\n    constructor(props) {\r\n        super(props)        \r\n        this.setCart=null;\r\n        this.state = {           \r\n             products:[],\r\n             cart:[]\r\n                                     \r\n        }\r\n    }\r\n    \r\n      componentDidMount(){\r\n          axios.get(\"http://localhost:7000/Products/\")          \r\n          .then(response=>{\r\n              this.setState({products:response.data});\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n\r\n      }\r\n    render() {\r\n        const {products}=this.state\r\n        const {cart,setCart}=this.state\r\n                \r\n        const addToCart = (product) => {\r\n            console.log(\"items added to cart\")\r\n            setCart([...cart,product]);\r\n        }\r\n        return (\r\n            \r\n            <div className=\"products\">                \r\n               {\r\n                   products.map(product =>\r\n                   <div key={product.id}>\r\n                       <h2>{product.product_name}</h2>\r\n                       <h3>${product.product_cost}</h3>\r\n                       <img src={product.product_image} alt={product.product_name}/>\r\n                       <Button \r\n                            color='primary'\r\n                            variant='contained'\r\n                            onClick={() => addToCart(product)}>Add to Cart</Button>\r\n                       {/* <button>Add to Cart</button> */}\r\n                       </div>)\r\n               }\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Products\r\n","import React, { useEffect, useState, Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Products } from \"./Products\";\nimport axios from 'axios';\nimport { Button, CardHeader, FormControl, FormHelperText, Grid, TextField } from \"@material-ui/core\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport StripeCheckout from 'react-stripe-checkout';\nimport NumberFormat from 'react-number-format';\n\n\nconst PAGE_PRODUCTS ='products';\nconst PAGE_CART = 'cart';\nconst PAGE_CHECKOUT = 'checkout';\nconst PAGE_CONFIRMATION = 'confirm';\nconst PAGE_FAILURE = 'failure';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\n\nfunction App() {\n  const fetch_data_url=\"http://localhost:50087/api/stripe/products\"\n  const[products, setProduct] =useState(null)\n  const[cart, setCart] =useState([])\n  const[page, setPage] =useState(PAGE_PRODUCTS)\n  const[id, setId] = useState('')\n  const[error, setError] = useState('')\n  const[amtCharged, setAmt] = useState('')\n  \n\n  useEffect( () => {\n    axios.get(fetch_data_url)\n    .then(response=> {      \n      setProduct(response.data)\n    })\n\n  },[fetch_data_url])\n\n \n   if(products)\n   {\n      const addToCart = (product) => \n      {\n      console.log(\"items added to cart\")\n      setCart([...cart,{...product}]);\n      navigateTo(PAGE_CART);\n      }\n\n      const navigateTo =(nextPage) =>\n      {\n        setPage(nextPage);\n      }      \n\n      const removeFromCart =(productToRemove) =>\n      {\n        setCart(cart.filter(product => product!=productToRemove));\n      }\n      \n      \n      async function handleToken(token, addresses, products) \n      {\n        console.log(cart)         \n        const response = await axios.post(\n          \"http://localhost:50087/api/stripe/charge\",\n          {            \n            amount: Number(cart[0].product_cost)*100,\n            currency: \"usd\",\n            description: \"Purchased \"+cart[0].product_name,            \n            recipientEmail: document.getElementById(\"email\").value,\n            shipping:{\n              name: document.getElementById(\"fullname\").value,\n              address:{\n                line1:document.getElementById(\"addressline1\").value,\n                line2:null,\n                city:document.getElementById(\"city\").value,\n                country:\"USA\",\n                postal_code:document.getElementById(\"postalcode\").value\n              }\n\n            }\n          }\n        );\n        const { status } = response.data;\n        console.log(\"Response:\", response.data);\n        console.log(\"Status Value:\", status);\n        if (status === \"Success\") {          \n          setId(response.data.response_id)\n          setAmt(response.data.amount_charged)\n          navigateTo(PAGE_CONFIRMATION)\n          removeFromCart(cart[0])\n        } else {\n          setError(response.data.error)\n          navigateTo(PAGE_FAILURE)\n        }      \n      }\n\n      const renderProducts = () =>(\n        <>    \n        <h1>Products</h1>    \n        <div className=\"products\">                \n        {          \n          products.map(product =>\n          <div key={product.id}>\n              <h2>{product.product_name}</h2>\n              <h3>${product.product_cost}</h3>\n              <img src={product.product_image} alt={product.product_name}/>\n              <Button \n                  color='primary'\n                  variant='contained'\n                  size='small'\n                  onClick={() => addToCart(product)}>Add to Cart</Button>\n              {/* <button>Add to Cart</button> */}\n              </div>)\n        }\n        </div>\n        </>\n\n      );\n\n      const renderCart = () =>(\n        <>\n        <h1>Cart</h1>       \n        <Button \n                  color='secondary'\n                  variant='contained'\n                  size='large'\n                  onClick={() => navigateTo(PAGE_CHECKOUT)}>Check Out</Button>\n\n        <div className=\"products\">                \n        {          \n          cart.map(product =>\n          <div key={product.id}>\n              <h2>{product.product_name}</h2>\n              <h3>${product.product_cost}</h3>\n              <img src={product.product_image} alt={product.product_name}/>\n              <Button \n                  color='primary'\n                  variant='contained'\n                  size='small'\n                  onClick={() => removeFromCart(product)}>Remove from Cart</Button>\n              {/* <button>Add to Cart</button> */}\n              </div>)\n        }\n        </div>\n        </>\n\n      );\n\n      const renderConfirmation = () =>(\n        <>\n        <h1>Payment Successful</h1> \n        <h2>ConfirmationID: {id}</h2>  \n        <h3>AmountCharged: {amtCharged}</h3>    \n        <Button \n                  color='secondary'\n                  variant='contained'\n                  size='large'\n                  onClick={() => navigateTo(PAGE_PRODUCTS)}>Return to Products</Button>        \n        </>\n      );\n\n      const renderFailure = () =>(\n        <>\n        <h1>Payment Failed!</h1> \n        <h2>Do not re-attempt payment, reach out to customer care for more questions</h2> \n        <h3>Error: {error}</h3>  \n           \n        <Button \n                  color='secondary'\n                  variant='contained'\n                  size='large'\n                  onClick={() => navigateTo(PAGE_PRODUCTS)}>Return to Products</Button>        \n        </>\n      );\n\n      const renderCheckout = () =>(\n        <>\n        <h1>Check Out</h1>         \n        <Grid container spacing={1} alignContent='flex-start'>\n        <Grid item xs={12} align=\"center\">\n            <FormControl>              \n                <TextField\n                  required\n                  id=\"fullname\"\n                  label=\"Full Name\"\n                  defaultValue=\"\"\n                  variant=\"outlined\"                                \n                />                          \n            </FormControl>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <FormControl>             \n                <TextField\n                  required\n                  id=\"email\"\n                  label=\"Email Address\"\n                  defaultValue=\"\"\n                  variant=\"outlined\"                  \n                />\n                          \n            </FormControl>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <FormControl>              \n                <TextField\n                  required\n                  id=\"addressline1\"\n                  label=\"Address Line1\"\n                  defaultValue=\"\"\n                  variant=\"outlined\"\n                />\n                          \n            </FormControl>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <FormControl>              \n                <TextField\n                  required\n                  id=\"city\"\n                  label=\"City\"\n                  defaultValue=\"\"\n                  variant=\"outlined\"\n                />\n                          \n            </FormControl>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <FormControl>             \n                <TextField\n                  required\n                  id=\"state\"\n                  label=\"State\"\n                  defaultValue=\"\"\n                  variant=\"outlined\"\n                />\n                          \n            </FormControl>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <FormControl>             \n            <FormControl>             \n                <TextField\n                  required\n                  id=\"postalcode\"\n                  label=\"Zip Code\"\n                  defaultValue=\"\"\n                  variant=\"outlined\"\n                />\n                          \n            </FormControl>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n                label=\"Credit Card Number\"\n                name=\"ccnumber\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                InputLabelProps={{ shrink: true }}                \n                />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n            <TextField\n                label=\"Expiration Date\"\n                name=\"ccexp\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                // InputProps={<NumberFormat format=\"##/##\" placeholder=\"MM/YY\" mask={['M', 'M', 'Y', 'Y']}/>}\n                InputLabelProps={{ shrink: true }}\n            />\n        </Grid>\n        <Grid item xs={6} sm={2}>\n            <TextField\n                label=\"CVC\"\n                name=\"cvc\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                InputLabelProps={{ shrink: true }}\n            />\n        </Grid>\n          <Grid item xs={12} align=\"center\">\n          <Button color=\"primary\" variant=\"contained\" onClick={handleToken}>Pay</Button>              \n          </Grid>\n        </Grid>\n        {/* <StripeCheckout\n         stripeKey=\"pk_test_51ILqcxAnO5xZOvcMywIxCFIOZ0Lvku5k99BcD1nhT25g0gw6X00KoDtneffHuqz8tsEzJdhB5mUzOKKuGZUapofY00moJMEvVm\"\n         \n         amount={cart.map(product => product.product_cost * 100)}\n         name={cart.map(product => product.product_name)}\n         billingAddress\n         shippingAddress\n         onClick={handleToken(cart.map(product => product))}\n        \n        />        */}\n        </>\n\n      );\n      \n     return(\n      <div className=\"App\">       \n        <header>\n        <Button \n            color='secondary'\n            variant='contained'\n            size ='large'\n            onClick={() => navigateTo(PAGE_CART)}\n        >Go to Cart ({cart.length})</Button>\n        \n        <Button \n            color='secondary'\n            variant='contained'\n            size ='large'\n            onClick={() => navigateTo(PAGE_PRODUCTS)}\n        >View Products</Button>\n        <h1>Doorbell Cameras</h1>\n        </header>\n        {page === PAGE_PRODUCTS && renderProducts()}   \n        {page === PAGE_CART && renderCart()}  \n        {page === PAGE_CHECKOUT && renderCheckout()} \n        {page === PAGE_CONFIRMATION && renderConfirmation()}  \n        {page === PAGE_FAILURE && renderFailure()}\n         \n      </div>\n     )\n   \n  }\n  return (\n    <div className=\"App\">\n      {/* <h1>{product.product_name}</h1> */}    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}